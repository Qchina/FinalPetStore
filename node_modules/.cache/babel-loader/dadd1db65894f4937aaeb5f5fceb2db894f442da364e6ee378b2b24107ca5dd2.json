{"ast":null,"code":"import { catalogApi } from '@/api/catalog';\nexport default {\n  props: {\n    itemId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      item: {},\n      product: {}\n    };\n  },\n  watch: {\n    itemId: {\n      immediate: true,\n      handler: 'fetchItemDetails'\n    }\n  },\n  methods: {\n    async fetchItemDetails() {\n      try {\n        // 获取商品详情\n        const itemResponse = await catalogApi.getItem(this.itemId);\n        if (itemResponse.data.status === 0) {\n          this.item = itemResponse.data.data;\n\n          // 获取相关产品信息\n          const productResponse = await catalogApi.getProduct(this.item.productId);\n          if (productResponse.data.status === 0) {\n            this.product = productResponse.data.data;\n          }\n        } else {\n          console.error('Failed to fetch item:', itemResponse.data.msg);\n          // 使用模拟数据作为备份\n          this.useMockData();\n        }\n      } catch (error) {\n        console.error('Failed to fetch item details:', error);\n        // 使用模拟数据作为备份\n        this.useMockData();\n      }\n    },\n    useMockData() {\n      // 根据itemId设置模拟数据\n      // 这里需要根据你的实际情况添加模拟数据\n    },\n    addToCart() {\n      console.log('Add to cart:', this.item);\n      alert(`Added ${this.item.description} to cart!`);\n    },\n    returnToProduct() {\n      this.$emit('return-to-product');\n    },\n    returnToMain() {\n      this.$emit('return-to-main');\n    },\n    getImageUrl(imagePath) {\n      if (!imagePath) return '';\n      // 移除路径中的相对路径标记\n      const cleanPath = imagePath.replace('../images/', '');\n      // 使用require导入图片\n      try {\n        return require(`@/assets/images/${cleanPath}`);\n      } catch (error) {\n        console.error('Failed to load image:', error);\n        return ''; // 如果图片加载失败返回空字符串\n      }\n    }\n  }\n};","map":{"version":3,"names":["catalogApi","props","itemId","type","String","required","data","item","product","watch","immediate","handler","methods","fetchItemDetails","itemResponse","getItem","status","productResponse","getProduct","productId","console","error","msg","useMockData","addToCart","log","alert","description","returnToProduct","$emit","returnToMain","getImageUrl","imagePath","cleanPath","replace","require"],"sources":["D:\\ournewpetstore\\src\\components\\commodity\\ItemDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"item-detail-container\">\r\n    <div class=\"auth-form\">\r\n      <div class=\"header-container\">\r\n        <h2>{{ item.productName }}</h2>\r\n        <div class=\"button-group\">\r\n          <button type=\"button\" @click=\"returnToProduct\" class=\"return-button\">Return to {{ productId }}</button>\r\n          <button type=\"button\" @click=\"returnToMain\" class=\"return-button\">Return to Main Menu</button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"item-content\">\r\n        <div class=\"item-info\">\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Item ID:</div>\r\n            <div class=\"info-value\">{{ item.itemId }}</div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Product ID:</div>\r\n            <div class=\"info-value\">{{ item.productId }}</div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Description:</div>\r\n            <div class=\"info-value\">\r\n              <img v-if=\"item.descriptionImage\" :src=\"getImageUrl(item.descriptionImage)\" alt=\"Product Image\" class=\"description-image\">\r\n              <div>{{ item.descriptionText }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Attributes:</div>\r\n            <div class=\"info-value\">{{ item.attributes }}</div>\r\n          </div>\r\n\r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">Quantity:</div>\r\n            <div class=\"info-value\">{{ item.quantity }}</div>\r\n          </div>\r\n          \r\n          <div class=\"info-row\">\r\n            <div class=\"info-label\">List Price:</div>\r\n            <div class=\"info-value price\">${{ item.listPrice ? item.listPrice.toFixed(2) : '0.00' }}</div>\r\n          </div>\r\n          \r\n          <div class=\"action-row\">\r\n            <button @click=\"addToCart\" class=\"add-to-cart-btn\">Add to Cart</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { catalogApi } from '@/api/catalog';\r\n\r\nexport default {\r\n  props: {\r\n    itemId: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      item: {},\r\n      product: {}\r\n    };\r\n  },\r\n  watch: {\r\n    itemId: {\r\n      immediate: true,\r\n      handler: 'fetchItemDetails'\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchItemDetails() {\r\n      try {\r\n        // 获取商品详情\r\n        const itemResponse = await catalogApi.getItem(this.itemId);\r\n        if (itemResponse.data.status === 0) {\r\n          this.item = itemResponse.data.data;\r\n          \r\n          // 获取相关产品信息\r\n          const productResponse = await catalogApi.getProduct(this.item.productId);\r\n          if (productResponse.data.status === 0) {\r\n            this.product = productResponse.data.data;\r\n          }\r\n        } else {\r\n          console.error('Failed to fetch item:', itemResponse.data.msg);\r\n          // 使用模拟数据作为备份\r\n          this.useMockData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch item details:', error);\r\n        // 使用模拟数据作为备份\r\n        this.useMockData();\r\n      }\r\n    },\r\n    useMockData() {\r\n      // 根据itemId设置模拟数据\r\n      // 这里需要根据你的实际情况添加模拟数据\r\n    },\r\n    addToCart() {\r\n      console.log('Add to cart:', this.item);\r\n      alert(`Added ${this.item.description} to cart!`);\r\n    },\r\n    returnToProduct() {\r\n      this.$emit('return-to-product');\r\n    },\r\n    returnToMain() {\r\n      this.$emit('return-to-main');\r\n    },\r\n    getImageUrl(imagePath) {\r\n      if (!imagePath) return '';\r\n      // 移除路径中的相对路径标记\r\n      const cleanPath = imagePath.replace('../images/', '');\r\n      // 使用require导入图片\r\n      try {\r\n        return require(`@/assets/images/${cleanPath}`);\r\n      } catch (error) {\r\n        console.error('Failed to load image:', error);\r\n        return ''; // 如果图片加载失败返回空字符串\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.item-detail-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.auth-form {\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.return-button {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n}\r\n\r\n.return-button:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.item-content {\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 4px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.info-row {\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.info-label {\r\n  flex: 0 0 120px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.info-value {\r\n  flex: 1;\r\n}\r\n\r\n.price {\r\n  font-size: 20px;\r\n  color: #2196F3;\r\n  font-weight: bold;\r\n}\r\n\r\n.action-row {\r\n  margin-top: 20px;\r\n}\r\n\r\n.add-to-cart-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n.add-to-cart-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.description-image {\r\n  max-width: 200px;\r\n  margin-bottom: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":"AAwDA,SAASA,UAAS,QAAS,eAAe;AAE1C,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC,CAAC;MACRC,OAAO,EAAE,CAAC;IACZ,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLP,MAAM,EAAE;MACNQ,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF;QACA,MAAMC,YAAW,GAAI,MAAMd,UAAU,CAACe,OAAO,CAAC,IAAI,CAACb,MAAM,CAAC;QAC1D,IAAIY,YAAY,CAACR,IAAI,CAACU,MAAK,KAAM,CAAC,EAAE;UAClC,IAAI,CAACT,IAAG,GAAIO,YAAY,CAACR,IAAI,CAACA,IAAI;;UAElC;UACA,MAAMW,eAAc,GAAI,MAAMjB,UAAU,CAACkB,UAAU,CAAC,IAAI,CAACX,IAAI,CAACY,SAAS,CAAC;UACxE,IAAIF,eAAe,CAACX,IAAI,CAACU,MAAK,KAAM,CAAC,EAAE;YACrC,IAAI,CAACR,OAAM,GAAIS,eAAe,CAACX,IAAI,CAACA,IAAI;UAC1C;QACF,OAAO;UACLc,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEP,YAAY,CAACR,IAAI,CAACgB,GAAG,CAAC;UAC7D;UACA,IAAI,CAACC,WAAW,CAAC,CAAC;QACpB;MACF,EAAE,OAAOF,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD;QACA,IAAI,CAACE,WAAW,CAAC,CAAC;MACpB;IACF,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ;MACA;IAAA,CACD;IACDC,SAASA,CAAA,EAAG;MACVJ,OAAO,CAACK,GAAG,CAAC,cAAc,EAAE,IAAI,CAAClB,IAAI,CAAC;MACtCmB,KAAK,CAAC,SAAS,IAAI,CAACnB,IAAI,CAACoB,WAAW,WAAW,CAAC;IAClD,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,KAAK,CAAC,mBAAmB,CAAC;IACjC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACD,KAAK,CAAC,gBAAgB,CAAC;IAC9B,CAAC;IACDE,WAAWA,CAACC,SAAS,EAAE;MACrB,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;MACzB;MACA,MAAMC,SAAQ,GAAID,SAAS,CAACE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;MACrD;MACA,IAAI;QACF,OAAOC,OAAO,CAAC,mBAAmBF,SAAS,EAAE,CAAC;MAChD,EAAE,OAAOZ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,OAAO,EAAE,EAAE;MACb;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}