{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      logs: []\n    };\n  },\n  async created() {\n    await Promise.all([this.fetchUsername(), this.fetchLogs()]);\n  },\n  methods: {\n    async fetchUsername() {\n      try {\n        // 从localStorage获取用户信息\n        const user = JSON.parse(localStorage.getItem('user') || '{}');\n        this.username = user.username || '';\n      } catch (error) {\n        console.error('获取用户名失败:', error);\n      }\n    },\n    async fetchLogs() {\n      try {\n        const response = await axios.get('http://localhost:9090/api/v1/logs', {\n          withCredentials: true\n        });\n        console.log('日志响应数据:', response); // 添加调试日志\n\n        // 直接使用响应数据，因为后端直接返回日志列表\n        if (Array.isArray(response.data)) {\n          this.logs = response.data.map(log => ({\n            time: log.time,\n            behavior: log.behavior\n          }));\n        } else {\n          console.error('获取到的日志数据格式不正确');\n          this.logs = [];\n        }\n      } catch (error) {\n        if (error.response?.status === 401) {\n          console.error('用户未登录');\n          this.$router.push('/userauth');\n        } else {\n          console.error('获取日志失败:', error);\n        }\n        this.logs = [];\n      }\n    },\n    returnToMyAccount() {\n      this.$emit('switch-to-userProfile');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","logs","created","Promise","all","fetchUsername","fetchLogs","methods","user","JSON","parse","localStorage","getItem","error","console","response","get","withCredentials","log","Array","isArray","map","time","behavior","status","$router","push","returnToMyAccount","$emit"],"sources":["D:\\ournewpetstore\\src\\components\\account\\UserLogs.vue"],"sourcesContent":["<template>\r\n  <div class=\"logs-container\">\r\n    <div class=\"auth-form\">\r\n      <div class=\"header-container\">\r\n        <h2>{{ username }}_log</h2>\r\n        <button type=\"button\" @click=\"returnToMyAccount\" class=\"return-button\">Return to My Account</button>\r\n      </div>\r\n      <!-- 修改表格容器结构 -->\r\n      <div class=\"form-container\">\r\n        <div class=\"header-group\">\r\n          <div class=\"col\">Time</div>\r\n          <div class=\"col\">History</div>\r\n        </div>\r\n        <div class=\"logs-scroll-container\">\r\n          <div v-for=\"log in logs\" :key=\"log.time + log.behavior\" class=\"log-item\">\r\n            <div class=\"col\">{{ log.time }}</div>\r\n            <div class=\"col\">{{ log.behavior }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      logs: []\r\n    };\r\n  },\r\n  async created() {\r\n    await Promise.all([this.fetchUsername(), this.fetchLogs()]);\r\n  },\r\n  methods: {\r\n          async fetchUsername() {\r\n      try {\r\n        // 从localStorage获取用户信息\r\n        const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n        this.username = user.username || '';\r\n      } catch (error) {\r\n        console.error('获取用户名失败:', error);\r\n      }\r\n    },\r\n    async fetchLogs() {\r\n      try {\r\n        const response = await axios.get('http://localhost:9090/api/v1/logs', {\r\n          withCredentials: true\r\n        });\r\n        console.log('日志响应数据:', response); // 添加调试日志\r\n        \r\n        // 直接使用响应数据，因为后端直接返回日志列表\r\n        if (Array.isArray(response.data)) {\r\n          this.logs = response.data.map(log => ({\r\n            time: log.time,\r\n            behavior: log.behavior\r\n          }));\r\n        } else {\r\n          console.error('获取到的日志数据格式不正确');\r\n          this.logs = [];\r\n        }\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          console.error('用户未登录');\r\n          this.$router.push('/userauth');\r\n        } else {\r\n          console.error('获取日志失败:', error);\r\n        }\r\n        this.logs = [];\r\n      }\r\n    },\r\n    returnToMyAccount() {\r\n      this.$emit('switch-to-userProfile');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n}\r\n\r\n.logs-container::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 0;\r\n}\r\n\r\n.auth-form {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(0);\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.auth-form:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 新增标题和按钮容器样式 */\r\n.header-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  gap: 20px; /* 添加间距，可以根据需求调整数值 */\r\n}\r\n\r\nh2 {\r\n  text-align: left; /* 修改标题对齐方式 */\r\n  margin-bottom: 0; /* 移除底部外边距 */\r\n  font-size: 20px;\r\n}\r\n\r\n/* 调整返回按钮样式 */\r\n.return-button {\r\n  width: auto;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n}\r\n\r\nbutton {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0b7dda;\r\n  transform: scale(1.02);\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.form-group:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.col {\r\n  flex: 1;\r\n  padding: 12px;\r\n  word-break: break-word;\r\n  border-right: 1px solid #e0e0e0; /* 添加右侧边框作为分割线 */\r\n}\r\n\r\n.col:last-child {\r\n  border-right: none; /* 移除最后一列的右侧边框 */\r\n}\r\n\r\n.log-item:nth-child(even) {\r\n  background-color: #fafafa;\r\n}\r\n\r\n.log-item:hover {\r\n  background-color: #f0f0f0;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.form-container {\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  max-height: 500px; /* 设置最大高度 */\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header-group {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n  display: flex;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1;\r\n  border-bottom: 2px solid #e0e0e0;\r\n}\r\n\r\n.logs-scroll-container {\r\n  overflow-y: auto;\r\n  flex-grow: 1;\r\n}\r\n\r\n.log-item {\r\n  display: flex;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n/* 添加滚动条样式 */\r\n.logs-scroll-container::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.logs-scroll-container::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n\r\n.logs-scroll-container::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 4px;\r\n}\r\n\r\n.logs-scroll-container::-webkit-scrollbar-thumb:hover {\r\n  background: #555;\r\n}\r\n\r\n</style>"],"mappings":";;;AAyBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7D,CAAC;EACDC,OAAO,EAAE;IACD,MAAMF,aAAaA,CAAA,EAAG;MAC1B,IAAI;QACF;QACA,MAAMG,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC;QAC7D,IAAI,CAACZ,QAAO,GAAIQ,IAAI,CAACR,QAAO,IAAK,EAAE;MACrC,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IACD,MAAMP,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,mCAAmC,EAAE;UACpEC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFH,OAAO,CAACI,GAAG,CAAC,SAAS,EAAEH,QAAQ,CAAC,EAAE;;QAElC;QACA,IAAII,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAChB,IAAI,CAAC,EAAE;UAChC,IAAI,CAACE,IAAG,GAAIc,QAAQ,CAAChB,IAAI,CAACsB,GAAG,CAACH,GAAE,KAAM;YACpCI,IAAI,EAAEJ,GAAG,CAACI,IAAI;YACdC,QAAQ,EAAEL,GAAG,CAACK;UAChB,CAAC,CAAC,CAAC;QACL,OAAO;UACLT,OAAO,CAACD,KAAK,CAAC,eAAe,CAAC;UAC9B,IAAI,CAACZ,IAAG,GAAI,EAAE;QAChB;MACF,EAAE,OAAOY,KAAK,EAAE;QACd,IAAIA,KAAK,CAACE,QAAQ,EAAES,MAAK,KAAM,GAAG,EAAE;UAClCV,OAAO,CAACD,KAAK,CAAC,OAAO,CAAC;UACtB,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;QAChC,OAAO;UACLZ,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QACjC;QACA,IAAI,CAACZ,IAAG,GAAI,EAAE;MAChB;IACF,CAAC;IACD0B,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACrC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}