{"ast":null,"code":"// 删除未使用的导入\n// import { catalogApi } from '@/api/catalog';\n\nexport default {\n  data() {\n    return {\n      categories: [{\n        id: 'FISH',\n        name: 'Fish',\n        description: 'Saltwater, Freshwater'\n      }, {\n        id: 'DOGS',\n        name: 'Dogs',\n        description: 'Various Breeds'\n      }, {\n        id: 'CATS',\n        name: 'Cats',\n        description: 'Various Breeds, Exotic Varieties'\n      }, {\n        id: 'REPTILES',\n        name: 'Reptiles',\n        description: 'Lizards, Turtles, Snakes'\n      }, {\n        id: 'BIRDS',\n        name: 'Birds',\n        description: 'Exotic Varieties'\n      }]\n    };\n  },\n  created() {\n    this.fetchCategories();\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        // 这里假设后端有一个获取所有分类的API\n        // 如果没有这样的API，可以保留使用静态数据\n        // 如果后端提供了获取所有分类的API，可以取消下面的注释\n\n        // 由于后端API中没有看到获取所有分类的接口，所以这里保留使用静态数据\n      } catch (error) {\n        console.error('Failed to fetch categories:', error);\n      }\n    },\n    navigateToCategory(category) {\n      // 将前端显示的分类名称传递给父组件\n      this.$emit('switch-to-category-detail', category);\n    }\n  }\n};","map":{"version":3,"names":["data","categories","id","name","description","created","fetchCategories","methods","error","console","navigateToCategory","category","$emit"],"sources":["D:\\ournewpetstore\\src\\components\\commodity\\CommodityList.vue"],"sourcesContent":["<template>\r\n  <div class=\"commodity-container\">\r\n    <div class=\"commodity-content\">\r\n      <div class=\"category-sidebar\">\r\n        <div class=\"category-item\" @click=\"navigateToCategory('Fish')\">\r\n          <h3>Fish</h3>\r\n          <p>Saltwater, Freshwater</p>\r\n        </div>\r\n        <div class=\"category-item\" @click=\"navigateToCategory('Dogs')\">\r\n          <h3>Dogs</h3>\r\n          <p>Various Breeds</p>\r\n        </div>\r\n        <div class=\"category-item\" @click=\"navigateToCategory('Cats')\">\r\n          <h3>Cats</h3>\r\n          <p>Various Breeds, Exotic Varieties</p>\r\n        </div>\r\n        <div class=\"category-item\" @click=\"navigateToCategory('Reptiles')\">\r\n          <h3>Reptiles</h3>\r\n          <p>Lizards, Turtles, Snakes</p>\r\n        </div>\r\n        <div class=\"category-item\" @click=\"navigateToCategory('Birds')\">\r\n          <h3>Birds</h3>\r\n          <p>Exotic Varieties</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-display\">\r\n        <div class=\"pet-collage-wrapper\">\r\n          <!-- 使用单张图片和图像映射 -->\r\n          <img src=\"@/assets/pet-collage.jpg\" alt=\"Pet Categories\" usemap=\"#pet-map\" class=\"pet-collage\">\r\n          \r\n          <map name=\"pet-map\">\r\n            <!-- 鱼类区域 - 左上角圆形 -->\r\n            <area shape=\"circle\" coords=\"40,240,40\" alt=\"Fish\" @click=\"navigateToCategory('Fish')\">\r\n            \r\n            <!-- 鸟类区域 - 右上角圆形 -->\r\n            <area shape=\"circle\" coords=\"340,240,40\" alt=\"Birds\" @click=\"navigateToCategory('Birds')\">\r\n            \r\n            <!-- 狗区域 - 左下角圆形 -->\r\n            <area shape=\"circle\" coords=\"90,310,40\" alt=\"Dogs\" @click=\"navigateToCategory('Dogs')\">\r\n            \r\n            <!-- 爬行动物区域 - 底部中间圆形 -->\r\n            <area shape=\"circle\" coords=\"200,310,40\" alt=\"Reptiles\" @click=\"navigateToCategory('Reptiles')\">\r\n            \r\n            <!-- 猫区域 - 右下角圆形 -->\r\n            <area shape=\"circle\" coords=\"290,280,40\" alt=\"Cats\" @click=\"navigateToCategory('Cats')\">\r\n            \r\n            <!-- 中心区域 - 大圆形 -->\r\n            <area shape=\"circle\" coords=\"200,210,60\" alt=\"All Pets\" @click=\"navigateToCategory('Fish')\">\r\n          </map>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 删除未使用的导入\r\n// import { catalogApi } from '@/api/catalog';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [\r\n        { id: 'FISH', name: 'Fish', description: 'Saltwater, Freshwater' },\r\n        { id: 'DOGS', name: 'Dogs', description: 'Various Breeds' },\r\n        { id: 'CATS', name: 'Cats', description: 'Various Breeds, Exotic Varieties' },\r\n        { id: 'REPTILES', name: 'Reptiles', description: 'Lizards, Turtles, Snakes' },\r\n        { id: 'BIRDS', name: 'Birds', description: 'Exotic Varieties' }\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchCategories();\r\n  },\r\n  methods: {\r\n    async fetchCategories() {\r\n      try {\r\n        // 这里假设后端有一个获取所有分类的API\r\n        // 如果没有这样的API，可以保留使用静态数据\r\n        // 如果后端提供了获取所有分类的API，可以取消下面的注释\r\n        \r\n        // 由于后端API中没有看到获取所有分类的接口，所以这里保留使用静态数据\r\n      } catch (error) {\r\n        console.error('Failed to fetch categories:', error);\r\n      }\r\n    },\r\n    navigateToCategory(category) {\r\n      // 将前端显示的分类名称传递给父组件\r\n      this.$emit('switch-to-category-detail', category);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.commodity-container {\r\n  width:1000px;\r\n  min-height: 90vh;\r\n  margin: 0;\r\n  padding: 40px 0;\r\n  background: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* gap: 40px;  // 移除gap，交给内部flex容器控制 */\r\n}\r\n\r\n.commodity-content {\r\n  display: flex;           /* 横向并排 */\r\n  flex-direction: row;     /* 明确横向 */\r\n  gap: 40px;               /* 横向间隔 */\r\n  width: auto;\r\n  background: none;\r\n  box-shadow: none;\r\n  border-radius: 0;\r\n  padding: 0;\r\n  /* 其余样式可根据需要保留或精简 */\r\n}\r\n\r\n/* 分开侧边栏和主展示区，分别做磨砂和阴影 */\r\n.category-sidebar {\r\n  width: 300px;\r\n  min-width: 300px;\r\n  background: rgba(255,255,255,0.45);\r\n  border-radius: 24px;\r\n  box-shadow: 0 8px 32px 0 rgba(31,38,135,0.10);\r\n  backdrop-filter: blur(18px);\r\n  -webkit-backdrop-filter: blur(18px);\r\n  padding: 32px 18px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n  border: 1px solid rgba(255,255,255,0.18);\r\n}\r\n\r\n.category-item {\r\n  margin: 0;\r\n  padding: 18px 20px;\r\n  border-radius: 16px;\r\n  background: rgba(255,255,255,0.7);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border: none;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\r\n  font-size: 18px;\r\n}\r\n\r\n.category-item:hover {\r\n  background: rgba(255,255,255,0.95);\r\n  transform: translateX(8px) scale(1.03);\r\n  box-shadow: 0 6px 18px rgba(0,0,0,0.08);\r\n}\r\n\r\n.category-item h3 {\r\n  margin: 0 0 6px 0;\r\n  color: #1a2a3a;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.category-item p {\r\n  margin: 0;\r\n  color: #5a6a7a;\r\n  font-size: 14px;\r\n  opacity: 0.85;\r\n}\r\n\r\n.main-display {\r\n  flex: 1;\r\n  min-width: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255,255,255,0.35);\r\n  border-radius: 24px;\r\n  box-shadow: 0 8px 32px 0 rgba(31,38,135,0.10);\r\n  backdrop-filter: blur(18px);\r\n  -webkit-backdrop-filter: blur(18px);\r\n  padding: 32px 0;\r\n  margin-left: 0;\r\n  border: 1px solid rgba(255,255,255,0.18);\r\n}\r\n\r\n.pet-collage-wrapper {\r\n  width: 600px;\r\n  max-width: 600px;\r\n  height:400px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: white;\r\n  box-shadow: none;\r\n  border-radius: 20px;\r\n  transition: transform 1s;\r\n}\r\n\r\n/* 响应式优化 */\r\n@media (max-width: 1100px) {\r\n  .commodity-container {\r\n    flex-direction: column;\r\n    gap: 24px;\r\n    padding: 24px 0;\r\n  }\r\n  .main-display, .category-sidebar {\r\n    width:600px;\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  .main-display {\r\n    padding: 24px 0;\r\n  }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .category-sidebar, .main-display {\r\n    width: 98vw;\r\n    max-width: 98vw;\r\n    padding: 10px 0;\r\n    border-radius: 12px;\r\n  }\r\n  .pet-collage-wrapper {\r\n    max-width: 98vw;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":"AAwDA;AACA;;AAEA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,MAAM;QAAEC,IAAI,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAwB,CAAC,EAClE;QAAEF,EAAE,EAAE,MAAM;QAAEC,IAAI,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAiB,CAAC,EAC3D;QAAEF,EAAE,EAAE,MAAM;QAAEC,IAAI,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAmC,CAAC,EAC7E;QAAEF,EAAE,EAAE,UAAU;QAAEC,IAAI,EAAE,UAAU;QAAEC,WAAW,EAAE;MAA2B,CAAC,EAC7E;QAAEF,EAAE,EAAE,OAAO;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE;MAAmB;IAElE,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF;QACA;QACA;;QAEA;MAAA,CACF,CAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDE,kBAAkBA,CAACC,QAAQ,EAAE;MAC3B;MACA,IAAI,CAACC,KAAK,CAAC,2BAA2B,EAAED,QAAQ,CAAC;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}