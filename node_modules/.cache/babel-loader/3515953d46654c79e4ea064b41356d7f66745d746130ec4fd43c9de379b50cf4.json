{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userProfile: {\n        username: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        phone: '',\n        address1: '',\n        address2: '',\n        city: '',\n        zip: '',\n        status: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchUserProfile();\n  },\n  methods: {\n    async fetchUserProfile() {\n      try {\n        // 确保使用withCredentials发送请求\n        const response = await axios.get('http://localhost:9090/api/v1/accounts/profile', {\n          withCredentials: true\n        });\n        console.log('获取用户信息响应:', response.data); // 添加日志查看响应内容\n\n        if (response.data.success) {\n          this.userProfile = response.data.data;\n        } else {\n          console.error('获取用户信息失败:', response.data.message);\n          // 如果是未登录状态，可以尝试重定向到登录页面\n          if (response.data.message === '未登录') {\n            // 可以添加重定向到登录页面的逻辑\n            this.$router.push('/userauth');\n          } else {\n            alert(response.data.message || '获取用户信息失败');\n          }\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        alert('网络错误，请稍后再试');\n      }\n    },\n    async handleUpdate() {\n      try {\n        console.log('准备更新的用户信息:', this.userProfile); // 添加日志\n\n        const response = await axios.put('http://localhost:9090/api/v1/accounts/profile', this.userProfile, {\n          headers: {\n            'Content-Type': 'application/json' // 确保设置正确的内容类型\n          },\n          withCredentials: true\n        });\n        console.log('更新响应:', response.data); // 添加日志\n\n        if (response.data.success) {\n          alert('个人信息更新成功');\n          // 重新获取用户信息以确认更新\n          await this.fetchUserProfile();\n        } else {\n          alert(response.data.message || '更新失败');\n        }\n      } catch (error) {\n        console.error('更新个人信息失败:', error);\n        if (error.response) {\n          console.error('错误响应:', error.response.data);\n        }\n        alert('网络错误，请稍后再试');\n      }\n    },\n    switchToUserLogs() {\n      this.$emit('switch-to-userLogs');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userProfile","username","email","firstName","lastName","phone","address1","address2","city","zip","status","created","fetchUserProfile","methods","response","get","withCredentials","console","log","success","error","message","$router","push","alert","handleUpdate","put","headers","switchToUserLogs","$emit"],"sources":["D:\\ournewpetstore\\src\\components\\account\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n<div class=\"auth-form\">\r\n  <h2>User Profile</h2>\r\n  <form @submit.prevent=\"handleUpdate\">\r\n    <div class=\"form-container\">\r\n      <div class=\"form-column\">\r\n        <div class=\"form-group\">\r\n          <label>Username</label>\r\n          <input v-model=\"userProfile.username\" type=\"text\" required disabled>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Email</label>\r\n          <input v-model=\"userProfile.email\" type=\"email\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>First Name</label>\r\n          <input v-model=\"userProfile.firstName\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Last Name</label>\r\n          <input v-model=\"userProfile.lastName\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Telephone</label>\r\n          <input v-model=\"userProfile.phone\" type=\"tel\" required>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-column\">\r\n        <div class=\"form-group\">\r\n          <label>Address1</label>\r\n          <input v-model=\"userProfile.address1\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Address2</label>\r\n          <input v-model=\"userProfile.address2\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>City</label>\r\n          <input v-model=\"userProfile.city\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Status</label>\r\n          <input v-model=\"userProfile.status\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Zip Code</label>\r\n          <input v-model=\"userProfile.zip\" type=\"text\" required>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-footer\">\r\n      <button type=\"submit\">Update Profile</button>\r\n      <button type=\"button\" @click=\"switchToUserLogs\">View Logs</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\ndata() {\r\n  return {\r\n    userProfile: {\r\n      username: '',\r\n      email: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      phone: '',\r\n      address1: '',\r\n      address2: '',\r\n      city: '',\r\n      zip: '',\r\n      status: ''\r\n    }\r\n  }\r\n},\r\nasync created() {\r\n  await this.fetchUserProfile();\r\n},\r\nmethods: {\r\n  async fetchUserProfile() {\r\n    try {\r\n      // 确保使用withCredentials发送请求\r\n      const response = await axios.get('http://localhost:9090/api/v1/accounts/profile', {\r\n        withCredentials: true\r\n      });\r\n      \r\n      console.log('获取用户信息响应:', response.data); // 添加日志查看响应内容\r\n      \r\n      if (response.data.success) {\r\n        this.userProfile = response.data.data;\r\n      } else {\r\n        console.error('获取用户信息失败:', response.data.message);\r\n        // 如果是未登录状态，可以尝试重定向到登录页面\r\n        if (response.data.message === '未登录') {\r\n\r\n          // 可以添加重定向到登录页面的逻辑\r\n          this.$router.push('/userauth');\r\n        } else {\r\n          alert(response.data.message || '获取用户信息失败');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('获取用户信息失败:', error);\r\n      alert('网络错误，请稍后再试');\r\n    }\r\n  },\r\n      async handleUpdate() {\r\n    try {\r\n      console.log('准备更新的用户信息:', this.userProfile); // 添加日志\r\n      \r\n      const response = await axios.put('http://localhost:9090/api/v1/accounts/profile', this.userProfile, {\r\n        headers: {\r\n          'Content-Type': 'application/json' // 确保设置正确的内容类型\r\n        },\r\n        withCredentials: true\r\n      });\r\n      \r\n      console.log('更新响应:', response.data); // 添加日志\r\n      \r\n      if (response.data.success) {\r\n        alert('个人信息更新成功');\r\n        // 重新获取用户信息以确认更新\r\n        await this.fetchUserProfile();\r\n      } else {\r\n        alert(response.data.message || '更新失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('更新个人信息失败:', error);\r\n      if (error.response) {\r\n        console.error('错误响应:', error.response.data);\r\n      }\r\n      alert('网络错误，请稍后再试');\r\n    }\r\n  },\r\n  switchToUserLogs() {\r\n    this.$emit('switch-to-userLogs')\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\nmax-width: 900px;\r\nmargin: 0 auto;\r\npadding: 30px;\r\n}\r\n\r\n.profile-container::before {\r\ncontent: '';\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nbackground-color: rgba(0, 0, 0, 0.3);\r\nz-index: 0;\r\n}\r\n\r\n.auth-form {\r\nmax-width: 900px; /* 适当增加表单容器的宽度 */\r\nmargin: 0 auto;\r\npadding: 30px;\r\nborder-radius: 10px;\r\nbackground-color: rgba(255, 255, 255, 0.9);\r\nbox-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\ntransform: translateY(0);\r\ntransition: all 0.3s ease;\r\nposition: relative;\r\nz-index: 1;\r\n}\r\n.auth-form:hover {\r\ntransform: translateY(-5px);\r\nbox-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\nh2 {\r\ntext-align: center;\r\nmargin-bottom: 20px;\r\nfont-size: 20px;\r\n}\r\n\r\n.form-container {\r\ndisplay: flex;\r\ngap: 20px;\r\n}\r\n\r\n.form-column {\r\nflex: 1;\r\ndisplay: flex;\r\nflex-direction: column;\r\ngap: 15px;\r\n}\r\n\r\n.form-group {\r\n/* flex: 1 0 calc(50% - 10px); 每个表单组占50%宽度，减去一定的间距 */\r\nmargin-bottom: 0;\r\n}\r\n\r\ninput {\r\nwidth: 95%;;\r\npadding: 10px;\r\nborder: 1px solid #ccc;\r\nborder-radius: 3px;\r\nbackground-color: #f5f9ff;\r\n}\r\ninput:disabled {\r\nbackground-color: #f0f0f0;\r\ncolor: #666;\r\ncursor: not-allowed;\r\nborder: 1px solid #ddd;\r\n}\r\nbutton {\r\nbackground-color: #2196F3;\r\ncolor: white;\r\npadding: 12px 24px;\r\nborder: none;\r\nborder-radius: 25px;\r\ncursor: pointer;\r\nfont-size: 16px;\r\ntransition: all 0.3s ease;\r\nwidth: 100%;\r\n}\r\n\r\nbutton:hover {\r\nbackground-color: #0b7dda;\r\ntransform: scale(1.02);\r\n}\r\n\r\na {\r\ncolor: #007bff;\r\ntext-decoration: none;\r\n}\r\n\r\na:hover {\r\ntext-decoration: underline;\r\n}\r\n.error-message {\r\ncolor: red;\r\nfont-size: 12px;\r\nmargin-top: 5px;\r\n}\r\n\r\n.error-message {\r\ncolor: red;\r\nfont-size: 12px;\r\nmargin-top: 5px;\r\n}\r\n\r\n.form-footer {\r\ndisplay: flex;\r\nalign-items: center;\r\ngap: 20px;\r\nmargin-top: 20px;\r\n}\r\n\r\n.form-footer p {\r\nmargin: 0;\r\n}\r\n</style>"],"mappings":";AA6DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV;IACF;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+CAA+C,EAAE;UAChFC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAACf,IAAI,CAAC,EAAE;;QAEzC,IAAIe,QAAQ,CAACf,IAAI,CAACoB,OAAO,EAAE;UACzB,IAAI,CAACnB,WAAU,GAAIc,QAAQ,CAACf,IAAI,CAACA,IAAI;QACvC,OAAO;UACLkB,OAAO,CAACG,KAAK,CAAC,WAAW,EAAEN,QAAQ,CAACf,IAAI,CAACsB,OAAO,CAAC;UACjD;UACA,IAAIP,QAAQ,CAACf,IAAI,CAACsB,OAAM,KAAM,KAAK,EAAE;YAEnC;YACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;UAChC,OAAO;YACLC,KAAK,CAACV,QAAQ,CAACf,IAAI,CAACsB,OAAM,IAAK,UAAU,CAAC;UAC5C;QACF;MACF,EAAE,OAAOD,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCI,KAAK,CAAC,YAAY,CAAC;MACrB;IACF,CAAC;IACG,MAAMC,YAAYA,CAAA,EAAG;MACvB,IAAI;QACFR,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAClB,WAAW,CAAC,EAAE;;QAE7C,MAAMc,QAAO,GAAI,MAAMhB,KAAK,CAAC4B,GAAG,CAAC,+CAA+C,EAAE,IAAI,CAAC1B,WAAW,EAAE;UAClG2B,OAAO,EAAE;YACP,cAAc,EAAE,kBAAiB,CAAE;UACrC,CAAC;UACDX,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,QAAQ,CAACf,IAAI,CAAC,EAAE;;QAErC,IAAIe,QAAQ,CAACf,IAAI,CAACoB,OAAO,EAAE;UACzBK,KAAK,CAAC,UAAU,CAAC;UACjB;UACA,MAAM,IAAI,CAACZ,gBAAgB,CAAC,CAAC;QAC/B,OAAO;UACLY,KAAK,CAACV,QAAQ,CAACf,IAAI,CAACsB,OAAM,IAAK,MAAM,CAAC;QACxC;MACF,EAAE,OAAOD,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAIA,KAAK,CAACN,QAAQ,EAAE;UAClBG,OAAO,CAACG,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACN,QAAQ,CAACf,IAAI,CAAC;QAC7C;QACAyB,KAAK,CAAC,YAAY,CAAC;MACrB;IACF,CAAC;IACDI,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAAC,oBAAoB;IACjC;EACF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}