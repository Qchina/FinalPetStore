{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"auth-form\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"captcha-container\"\n};\nconst _hoisted_9 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"Register A New Account\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.handleRegister && $options.handleRegister(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.registerForm.username = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerForm.username]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.registerForm.password = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerForm.password]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Password Again\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.registerForm.confirmPassword = $event),\n    type: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerForm.confirmPassword]]), $options.passwordMismatch ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"密码不匹配\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Captcha\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.registerForm.captcha = $event),\n    type: \"text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.registerForm.captcha]]), _createElementVNode(\"img\", {\n    src: $data.captchaImage,\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.refreshCaptcha && $options.refreshCaptcha(...args)),\n    alt: \"验证码\",\n    class: \"captcha-image\"\n  }, null, 8 /* PROPS */, _hoisted_9)])]), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    class: \"form-footer\"\n  }, [_createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"注册\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", null, [_cache[12] || (_cache[12] = _createTextVNode(\"Already have an account？\")), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.switchToLogin && $options.switchToLogin(...args))\n  }, \"Go Login !\")])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleRegister","_hoisted_3","$event","$data","registerForm","username","type","required","_hoisted_4","password","_hoisted_5","confirmPassword","passwordMismatch","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","captcha","src","captchaImage","onClick","refreshCaptcha","alt","_hoisted_9","_createTextVNode","href","switchToLogin"],"sources":["D:\\ournewpetstore\\src\\components\\account\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"auth-form\">\r\n      <h2>Register A New Account</h2>\r\n      <form @submit.prevent=\"handleRegister\">\r\n        <div class=\"form-group\">\r\n          <label>Username</label>\r\n          <input v-model=\"registerForm.username\" type=\"text\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Password</label>\r\n          <input v-model=\"registerForm.password\" type=\"password\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Password Again</label>\r\n          <input v-model=\"registerForm.confirmPassword\" type=\"password\" required>\r\n          <p v-if=\"passwordMismatch\" class=\"error-message\">密码不匹配</p>  \r\n        </div>\r\n        <div class=\"form-group\">\r\n        <label>Captcha</label>\r\n        <div class=\"captcha-container\">\r\n          <input v-model=\"registerForm.captcha\" type=\"text\" required>\r\n          <img :src=\"captchaImage\" @click=\"refreshCaptcha\" alt=\"验证码\" class=\"captcha-image\">\r\n        </div>\r\n      </div>\r\n        <div class=\"form-footer\">\r\n          <button type=\"submit\">注册</button>\r\n        </div>\r\n      </form>\r\n      <p>Already have an account？<a href=\"#\" @click=\"switchToLogin\">Go Login !</a></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        captcha: ''\r\n      },\r\n       captchaImage: '' // 验证码图片base64数据\r\n    }\r\n  },\r\n  mounted() {\r\n    this.refreshCaptcha();  // 添加mounted钩子，确保组件加载时获取验证码\r\n  },\r\n  computed: {\r\n    passwordMismatch() {\r\n      return this.registerForm.password && \r\n             this.registerForm.confirmPassword && \r\n             this.registerForm.password !== this.registerForm.confirmPassword\r\n    }\r\n  },\r\n  methods: {\r\n    async refreshCaptcha() {\r\n      try {\r\n        const response = await axios.get('http://localhost:9090/api/v1/captcha', {\r\n          withCredentials: true\r\n        });\r\n        this.captchaImage = response.data.captchaImage;\r\n      } catch (error) {\r\n        console.error('获取验证码失败:', error);\r\n        alert('获取验证码失败，请刷新页面重试');\r\n      }\r\n    },\r\n    async handleRegister() {\r\n      if (this.passwordMismatch) {\r\n        alert('请确保两次输入的密码一致');\r\n        return;\r\n      }\r\n      try {\r\n        const registerData = { ...this.registerForm };\r\n        delete registerData.confirmPassword; // 删除确认密码字段\r\n        \r\n        const response = await axios.post('http://localhost:9090/api/v1/accounts/register', registerData, {\r\n          withCredentials: true\r\n        });\r\n        \r\n        if (response.data.success) {\r\n          alert('注册成功');\r\n          this.registerForm = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            captcha: ''\r\n          };\r\n          this.$emit('switch-to-login');\r\n        } else {\r\n          alert(response.data.message || '注册失败');\r\n          this.refreshCaptcha();\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          alert(error.response.data.message || '注册失败');\r\n        } else {\r\n          alert('网络错误，请稍后再试');\r\n        }\r\n        this.refreshCaptcha();\r\n      }\r\n    },\r\n    switchToLogin() {\r\n      this.$emit('switch-to-login')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 添加验证码相关样式 */\r\n.captcha-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.captcha-image {\r\n  margin-left: 10px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  border: 1px solid #ddd;\r\n  padding: 5px;\r\n}\r\n\r\n.captcha-container::after {\r\n  content: \"Click to refresh\";\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n  color: #666;\r\n}\r\n\r\n.register-container {\r\n  margin: 0 auto;\r\n  max-width: 400px;\r\n  padding: 30px;\r\n}\r\n\r\n.register-container::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 0;\r\n}\r\n\r\n.auth-form {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(0);\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.auth-form:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput {\r\n  width: 95%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  background-color: #f5f9ff;\r\n}\r\n\r\nbutton {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: all 0.3s ease;\r\n  width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0b7dda;\r\n  transform: scale(1.02);\r\n}\r\n\r\na {\r\n  color: #007bff;\r\n  text-decoration: none;\r\n}\r\n\r\na:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 12px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.form-footer {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-footer p {\r\n  margin: 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}