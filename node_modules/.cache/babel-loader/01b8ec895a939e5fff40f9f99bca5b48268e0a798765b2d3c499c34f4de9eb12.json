{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      logs: []\n    };\n  },\n  async created() {\n    await Promise.all([this.fetchUsername(), this.fetchLogs()]);\n  },\n  methods: {\n    async fetchUsername() {\n      try {\n        const response = await axios.get('/api/user/info');\n        this.username = response.data.username;\n      } catch (error) {\n        console.error('Failed to fetch username:', error);\n      }\n    },\n    async fetchLogs() {\n      try {\n        const response = await axios.get('/api/user/logs');\n        this.logs = response.data;\n      } catch (error) {\n        console.error('Failed to fetch logs:', error);\n      }\n    },\n    returnToMyAccount() {\n      this.$emit('switch-to-userProfile');\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","logs","created","Promise","all","fetchUsername","fetchLogs","methods","response","get","error","console","returnToMyAccount","$emit"],"sources":["C:\\Users\\13920\\Downloads\\ournewpetstore\\src\\components\\account\\UserLogs.vue"],"sourcesContent":["<template>\r\n  <div class=\"logs-container\">\r\n    <div class=\"auth-form\">\r\n      <!-- 将标题和按钮放在一个容器里 -->\r\n      <div class=\"header-container\">\r\n        <h2>{{ username }}_log</h2>\r\n        <button type=\"button\" @click=\"returnToMyAccount\" class=\"return-button\">Return to My Account</button>\r\n      </div>\r\n      <form class=\"form-container\">\r\n        <!-- 添加表头 -->\r\n        <div class=\"form-group header-group\">\r\n          <div class=\"col\">Time</div>\r\n          <div class=\"col\">History</div>\r\n        </div>\r\n        <div v-for=\"log in logs\" :key=\"log.time + log.behavior\" class=\"form-group log-item\">\r\n          <div class=\"col\">{{ log.time }}</div>\r\n          <div class=\"col\">{{ log.behavior }}</div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      logs: []\r\n    };\r\n  },\r\n  async created() {\r\n    await Promise.all([this.fetchUsername(), this.fetchLogs()]);\r\n  },\r\n  methods: {\r\n    async fetchUsername() {\r\n      try {\r\n        const response = await axios.get('/api/user/info');\r\n        this.username = response.data.username;\r\n      } catch (error) {\r\n        console.error('Failed to fetch username:', error);\r\n      }\r\n    },\r\n    async fetchLogs() {\r\n      try {\r\n        const response = await axios.get('/api/user/logs');\r\n        this.logs = response.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch logs:', error);\r\n      }\r\n    },\r\n    returnToMyAccount() {\r\n      this.$emit('switch-to-userProfile');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n}\r\n\r\n.logs-container::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 0;\r\n}\r\n\r\n.auth-form {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  transform: translateY(0);\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.auth-form:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 新增标题和按钮容器样式 */\r\n.header-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  gap: 20px; /* 添加间距，可以根据需求调整数值 */\r\n}\r\n\r\nh2 {\r\n  text-align: left; /* 修改标题对齐方式 */\r\n  margin-bottom: 0; /* 移除底部外边距 */\r\n  font-size: 20px;\r\n}\r\n\r\n/* 调整返回按钮样式 */\r\n.return-button {\r\n  width: auto;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n}\r\n\r\n.form-container {\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\nbutton {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0b7dda;\r\n  transform: scale(1.02);\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.form-group:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.header-group {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n}\r\n\r\n.col {\r\n  flex: 1;\r\n  padding: 12px;\r\n  word-break: break-word;\r\n  border-right: 1px solid #e0e0e0; /* 添加右侧边框作为分割线 */\r\n}\r\n\r\n.col:last-child {\r\n  border-right: none; /* 移除最后一列的右侧边框 */\r\n}\r\n\r\n.log-item:nth-child(even) {\r\n  background-color: #fafafa;\r\n}\r\n\r\n.log-item:hover {\r\n  background-color: #f0f0f0;\r\n  transition: background-color 0.3s ease;\r\n}\r\n</style>"],"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7D,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAACT,QAAO,GAAIQ,QAAQ,CAACT,IAAI,CAACC,QAAQ;MACxC,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAMJ,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAACR,IAAG,GAAIO,QAAQ,CAACT,IAAI;MAC3B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDE,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}